@model ATIMO.ViewModel.ClienteViewModel

@{
    ViewBag.Title = "Átimo - Cliente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("MenuAreaFuncionario")

<div class="main">
    <div class="container">
        <div class="row">
            <div class="widget">
                <div class="widget-header">
                    <i class="fa  fa-coffee"></i>
                    <h3>CLIENTE - EDIÇÃO</h3>
                </div>

                <div class="widget-content">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, null, new { @class = "alert alert-danger" })
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.IdCliente)

                        <fieldset>
                            <div class="form-group col-md-5">
                                <div>
                                    <label>CPF/CNPJ</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.NumDoc, new { @class = "form-control input-lg", maxlength = "18", placeholder = "CPF/CNPJ", id = "num_doc", required = "" })
                                    @Html.ValidationMessageFor(model => model.NumDoc, "Informe um número de documento!")
                                </div>
                            </div>

                            <div class="form-group col-md-5">
                                <div>
                                    <label>RG/INSC. ESTADUAL</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.InscEstadual, new { @class = "form-control input-lg", maxlength = "50", placeholder = "RG/INSC. ESTADUAL", id = "insc_estadual" })
                                    @Html.ValidationMessageFor(model => model.InscEstadual)
                                </div>
                            </div>

                            <div class="form-group col-md-2">
                                <div>
                                    <label>SITUAÇÃO</label>
                                </div>

                                <select class="editor-field" name="situacao" required="">
                                    @if ((Model != null) && (Model.Situacao == "A"))
                                    {
                                        <option value="A" selected="selected">ATIVO</option>
                                    }
                                    else
                                    {
                                        <option value="A">ATIVO</option>
                                    }

                                    @if ((Model != null) && (Model.Situacao == "I"))
                                    {
                                        <option value="I" selected="selected">INATIVO</option>
                                    }
                                    else
                                    {
                                        <option value="I">INATIVO</option>
                                    }
                                </select>
                            </div>

                            <div class="form-group col-md-12">
                                <div>
                                    <label>NOME/RAZÃO SOCIAL</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Razao, new { @class = "form-control input-lg uppercase", maxlength = "200", placeholder = "NOME/RAZÃO SOCIAL", id = "razao", required = "" })
                                    @Html.ValidationMessageFor(model => model.Razao, "Informe um nome/razão social!")
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div>
                                    <label>NOME FANTASIA</label>
                                </div>
                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Nome, new { @class = "form-control input-lg uppercase", maxlength = "200", placeholder = "NOME FANTASIA", id = "nome" })
                                    @Html.ValidationMessageFor(model => model.Nome)
                                </div>
                            </div>

                            <div class="form-group col-md-2">
                                <div>
                                    <label>CEP</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Cep, new { @class = "form-control input-lg uppercase", maxlength = "9", placeholder = "CEP", id = "cep", required = "", alt = "cep" })
                                    @Html.ValidationMessageFor(model => model.Cep, "Informe um CEP!")
                                </div>
                            </div>

                            <div class="form-group col-md-10">
                                <div>
                                    <label>ENDEREÇO</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Endereco, new { @class = "form-control input-lg uppercase", maxlength = "200", placeholder = "ENDEREÇO", id = "endereco", required = "" })
                                    @Html.ValidationMessageFor(model => model.Endereco, "Informe um endereço!")
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div>
                                    <label>COMPLEMENTO</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.Complemento, new { @class = "form-control input-lg uppercase", placeholder = "COMPLEMENTO", id = "complemento", rows = "5" })
                                    @Html.ValidationMessageFor(model => model.Complemento)
                                </div>
                            </div>

                            <div class="form-group col-md-5">
                                <div>
                                    <label>BAIRRO</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Bairro, new { @class = "form-control input-lg uppercase", maxlength = "200", placeholder = "BAIRRO", id = "bairro", required = "" })
                                    @Html.ValidationMessageFor(model => model.Bairro, "Informe um bairro!")
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                <div>
                                    <label>CIDADE</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Cidade, new { @class = "form-control input-lg uppercase", maxlength = "200", placeholder = "CIDADE", id = "cidade", required = "" })
                                    @Html.ValidationMessageFor(model => model.Cidade, "Informe uma cidade!")
                                </div>
                            </div>

                            <div class="form-group col-md-1">
                                <div>
                                    <label>UF</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Uf, new { @class = "form-control input-lg uppercase", maxlength = "2", placeholder = "UF", id = "uf", required = "" })
                                    @Html.ValidationMessageFor(model => model.Uf, "Informe uma UF!")
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div>
                                    <label>ZONA</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Zona, new { @class = "form-control input-lg uppercase", maxlength = "150", placeholder = "ZONA", id = "zona" })
                                    @Html.ValidationMessageFor(model => model.Zona)
                                </div>
                            </div>

                            <div class="form-group col-md-3">
                                <div>
                                    <label>TELEFONE</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Telefone1, new { @class = "form-control input-lg uppercase", maxlength = "25", placeholder = "TELEFONE", id = "telefone1", alt = "phone" })
                                    @Html.ValidationMessageFor(model => model.Telefone1)
                                </div>
                            </div>

                            <div class="form-group col-md-3">
                                <div>
                                    <label>CELULAR</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Telefone2, new { @class = "form-control input-lg uppercase", maxlength = "25", placeholder = "CELULAR", id = "telefone2", alt = "phone_9digito" })
                                    @Html.ValidationMessageFor(model => model.Telefone2)
                                </div>
                            </div>

                            <div class="form-group col-md-3">
                                <div>
                                    <label>TEL. CONTATO</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Telefone3, new { @class = "form-control input-lg uppercase", maxlength = "25", placeholder = "TEL. CONTATO", id = "telefone3", alt = "phone" })
                                    @Html.ValidationMessageFor(model => model.Telefone3)
                                </div>
                            </div>

                            <div class="form-group col-md-3">
                                <div>
                                    <label>CONTATO</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Contato, new { @class = "form-control input-lg uppercase", maxlength = "150", placeholder = "CONTATO", id = "contato", required = "" })
                                    @Html.ValidationMessageFor(model => model.Contato, "Informe um contato!")
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div>
                                    <label>EMAIL</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control input-lg", type = "email", maxlength = "255", placeholder = "EMAIL", id = "email", required = "" })
                                    @Html.ValidationMessageFor(model => model.Email, "Informe um e-mail!")
                                </div>
                            </div>

                            <div class="form-group col-md-12">
                                <div>
                                    <label>OBSERVAÇÃO</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextAreaFor(model => model.Observacao, new { @class = "form-control input-lg uppercase", placeholder = "OBSERVAÇÃO", id = "observacao", rows = "5" })
                                    @Html.ValidationMessageFor(model => model.Observacao)
                                </div>
                            </div>

                            <div class="form-group col-md-2">
                                <div>
                                    <label>COMO CONHECEU?</label>
                                </div>

                                <select class="editor-field" name="Como_Conheceu" required="">
                                    @if ((Model != null) && (Model.Como_Conheceu == "G"))
                                    {
                                        <option value="G" selected="selected">GOOGLE</option>
                                    }
                                    else
                                    {
                                        <option value="G">GOOGLE</option>
                                    }

                                    @if ((Model != null) && (Model.Como_Conheceu == "I"))
                                    {
                                        <option value="I" selected="selected">INDICAÇÃO</option>
                                    }
                                    else
                                    {
                                        <option value="I">INDICAÇÃO</option>
                                    }

                                    @if ((Model != null) && (Model.Como_Conheceu == "P"))
                                    {
                                        <option value="P" selected="selected">PORTIFOLIO</option>
                                    }
                                    else
                                    {
                                        <option value="P">PORTIFOLIO</option>
                                    }

                                    @if ((Model != null) && (Model.Como_Conheceu == "O"))
                                    {
                                        <option value="O" selected="selected">OUTROS</option>
                                    }
                                    else
                                    {
                                        <option value="O">OUTROS</option>
                                    }
                                </select>
                            </div>

                            <div class="form-group col-md-6">
                                <div>
                                    <label>OUTROS</label>
                                </div>

                                <div class="editor-field">
                                    @Html.TextBoxFor(model => model.Outros, new { @class = "form-control input-lg uppercase", maxlength = "100", placeholder = "OUTROS", id = "outros" })
                                    @Html.ValidationMessageFor(model => model.Outros)
                                </div>
                            </div>

                            <div class="form-group col-md-2">
                                <div>
                                    <label>POSSUI CONTRATO?</label>
                                </div>

                                <select class="editor-field" name="FlgContrato" required="">
                                    @if ((Model != null) && (Model.FlgContrato == "N"))
                                    {
                                        <option value="N" selected="selected">NÃO</option>
                                    }
                                    else
                                    {
                                        <option value="N">NÃO</option>
                                    }

                                    @if ((Model != null) && (Model.FlgContrato == "S"))
                                    {
                                        <option value="S" selected="selected">SIM</option>
                                    }
                                    else
                                    {
                                        <option value="S">SIM</option>
                                    }
                                </select>
                            </div>

                            <div class="form-group col-md-2">
                                <div>
                                    <label>POSSUI LOJA?</label>
                                </div>

                                @if (Model != null)
                                {
                                    <select class="editor-field" name="FlgLoja" id="FlgLoja" required="">
                                        @if ((Model.FlgLoja == "N"))
                                        {
                                            <option value="N" selected="selected">NÃO</option>
                                        }
                                        else
                                        {
                                            <option value="N">NÃO</option>
                                        }

                                        @if (Model.FlgLoja == "S")
                                        {
                                            <option value="S" selected="selected">SIM</option>
                                        }
                                        else
                                        {
                                            <option value="S">SIM</option>
                                        }
                                    </select>
                                }
                                else
                                {
                                    <select class="editor-field" name="FlgLoja" id="FlgLoja" required="" disabled="">
                                        @if ((Model != null) && (Model.FlgLoja == "N"))
                                        {
                                            <option value="N" selected="selected">NÃO</option>
                                        }
                                        else
                                        {
                                            <option value="N">NÃO</option>
                                        }

                                        @if ((Model != null) && (Model.FlgLoja == "S"))
                                        {
                                            <option value="S" selected="selected">SIM</option>
                                        }
                                        else
                                        {
                                            <option value="S">SIM</option>
                                        }
                                    </select>
                                }

                            </div>

                            <div class="col-md-12">
                                <input type="submit" value="Salvar" class="btn btn-primary" />
                                | @Html.ActionLink("Voltar", "Index")
                            </div>
                        </fieldset>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="buscar-modal" tabindex="-1" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">Buscar CNPJ</h4>
            </div>
            <div class="modal-body" style="height:250px;">
                <p>Preencha com o texto da imagem</p>
                <br />
                <div class="form-horizontal">
                    <div class="form-group">
                        <label class="control-label col-md-2">Texto</label>
                        <div class="col-md-5">
                            <input type="text" id="img-input" value="" class="form-control caixa-grande" />
                        </div>
                    </div>

                    <div class="form-group img-captcha">
                        <div class="col-md-offset-2 col-md-6">
                            <div style="float:left;">
                                <img id="captcha-img" title="Informe o texto da imagem" class="hidden" />
                            </div>
                            <div style="float:right;">
                                <a href="#" id="buscar-captcha-btn" class="btn btn-warning btn-sm"><i class="glyphicon glyphicon-refresh"></i></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="height:80px;">
                <p class="bg-danger pull-left hidden msg" style="padding:10px 20px;">
                    <i class="glyphicon glyphicon-warning-sign"></i>&nbsp;<strong><span id="msgErro-span"></span></strong>
                </p>
                <button type="button" id="fechar-button" class="btn btn-default" data-dismiss="modal">Fechar</button>
                <button type="button" id="buscarDados-btn" class="btn btn-primary">Buscar</button>
            </div>
        </div>
    </div>
</div>

@Html.Partial("Rodape")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    $("#zona").autocomplete({
        source: "@Url.Action("BuscarZona", "Cliente")",
        minLength: 2
    });

    function limpa_formulário_cep() {
        $("#endereco").val("");
        $("#bairro").val("");
        $("#cidade").val("");
        $("#uf").val("");
    }

    //$("#cep").blur(function () {
    //    var cep = $("#cep").val().replace("-", "");

    //    if (cep !== "") {
    //        var validacep = /^[0-9]{8}$/;

    //        if (validacep.test(cep)) {
    //            $("#endereco").val("...");
    //            $("#bairro").val("...");
    //            $("#cidade").val("...");
    //            $("#uf").val("...");

    //            $.getJSON("//viacep.com.br/ws/" + cep + "/json/?callback=?", function (dados) {

    //                if (!("erro" in dados)) {
    //                    $("#endereco").val(dados.logradouro);
    //                    $("#bairro").val(dados.bairro);
    //                    $("#cidade").val(dados.localidade);
    //                    $("#uf").val(dados.uf);
    //                }
    //                else {
    //                    limpa_formulário_cep();
    //                    alert("CEP não encontrado.");
    //                }
    //            });
    //        } else {
    //            limpa_formulário_cep();
    //            alert("Formato de CEP inválido.");
    //        }
    //    } else {
    //        limpa_formulário_cep();
    //    }
    //});

    $("#cep").change(function (e) {
        e.preventDefault();
        $("#endereco").val("");
        $("#bairro").val("");
        $("#cidade").val("");
        $("#uf").val("");

        var cep = $("#cep").val().replace("-", "");

        $.getJSON("http://cep.republicavirtual.com.br/web_cep.php?cep=" + cep + "&formato=json", {}, function (data) {
            if (data.resultado_txt === "sucesso - cep completo") {
                $("#endereco").val(data.tipo_logradouro + " " + data.logradouro);
                $("#bairro").val(data.bairro);
                $("#cidade").val(data.cidade);
                $("#uf").val(data.uf);
            } else {
                alert("CEP não encontrado!");
            }
        });
    });

    $("#num_doc").blur(function () {
        var cpfCnpj = $(this).val();
        if (formata_cpf_cnpj(cpfCnpj)) {
            $(this).val(formata_cpf_cnpj(cpfCnpj));

            if ($(this).val().length === 18)
                $("#buscar-modal").modal({ show: true });
            else if ($(this).val().length === 14) {
                $("#FlgLoja").val("N");
                $("#FlgLoja").attr("disabled", "");
            }
        } else {
            alert("CPF ou CNPJ inválido!");
            $(this).val("");
            $(this).focus();
            $("#FlgLoja").removeAttr("disabled", "");
        }
    });

    $("#buscar-modal").on("show.bs.modal", function () {
        $("#img-input").val("");
        BuscarCaptcha();
    });

    $("#buscar-modal").on("shown.bs.modal", function () {
        $("#img-input").focus();
    });

    $("#buscar-modal").on("hidden.bs.modal", function() {
        if ($("#img-input").val() === "") {
            //$("#num_doc").val("");
        }
    });

    $("#buscar-captcha-btn").on("click", function () {
        $("#captcha-img").fadeOut(1000, function () {
            $(this).attr("src", "");
            BuscarCaptcha();
        });
    });

    $("#buscarDados-btn").on("click", function () {
        ObterDados();
    });

    var pathLoader = "@Url.Content(@"~/Content/ajax-loader-facebook.gif ")";
    var $loader = $("<img class=\"loader-facebook\" src=\"" + pathLoader + "\"/> <em>Buscando ...</em>");

    var BuscarCaptcha = function () {
        var strUrl = "@Url.Action("GetCaptcha", "Cliente")";

        $.ajax({
            type: "GET",
            url: strUrl,
            dataType: "json",
            cache: false,
            async: true,
            beforeSend: function () {
                $loader.insertAfter($("#captcha-img"));
            },
            success: function (data) {
                $("#captcha-img").removeClass("hidden").attr("src", data);
                $("#captcha-img").fadeIn(1000);
            },
            complete: function () {
                $loader.remove();
                $("#img-input").focus();
            },
            error: function () {
                alert("Erro na tentativa de obter o captcha!");
            }
        });
    };

    var ObterDados = function () {
        var strUrl = "@Url.Action("ConsultarDados", "Cliente")";

        $.ajax({
            type: "post",
            url: strUrl,
            cache: false,
            async: true,
            data: { cnpj: $("#num_doc").val(), captcha: $("#img-input").val() },
            beforeSend: function () {
                $loader.insertBefore($("#fechar-button"));
            },
            success: function (data) {
                $loader.remove();
                if (data.erro.length > 0) {
                    $("#msgErro-span").text(data.erro).closest("p").removeClass("hidden");
                    $("#captcha-img").fadeOut(1000, function () {
                        $(this).attr("src", "");
                        BuscarCaptcha();
                        $("#img-input").focus();
                    });
                    setTimeout(function () {
                        $("#msgErro-span").closest("p").addClass("hidden");
                    }, 2000);

                    $("#img-input").val("");
                } else {
                    if (data.dados != null) {
                        PreencheDados(data.dados, false);
                        $("#buscar-modal").modal("hide");
                    } else {
                        $("#msgErro-span").text("Erro de comunicação com a receita!").closest("p").removeClass("hidden");
                        $("#captcha-img").fadeOut(1000, function () {
                            $(this).attr("src", "");
                            BuscarCaptcha();
                            $("#img-input").focus();
                        });
                        setTimeout(function () {
                            $("#msgErro-span").closest("p").addClass("hidden");
                        }, 2000);
                    }

                }
            },
            error: function () {
                $loader.remove();
                alert("Erro de comunicação!");
            }
        });
    };

    var PreencheDados = function (dados, clear) {
        if (clear) {
            $(".caixa-grande").val("");
        } else {
            $("#razao").val(dados.Razaosocial);
            $("#nome").val(dados.NomeFantasia);
            $("#endereco").val(dados.Endereco);
            $("#bairro").val(dados.Bairro);
            $("#cep").val(dados.Cep.replace(".", ""));
            $("#cidade").val(dados.Cidade);
            $("#uf").val(dados.Estado);
        }
    };
    </script>
}